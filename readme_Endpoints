Endpoint may look like these:

Create User
Method: POST
Endpoint: /api/users
Description: Create a new user.
Request Body:
{
  "username": "example_user",
  "password": "password123",
  "email": "user@example.com"
}
Response: Returns the created user object with the assigned user ID.

Create Challenge
Method: POST
Endpoint: /api/challenges
Description: Create a new challenge.
Request Body:
{
  "challenge_name": "Example Challenge",
  "alarm_time": "08:00",
  "duration": 7,
  "creator_id": 1,
  "participants": [2, 3, 4]
}
Response: Returns the created challenge object with the assigned challenge ID.

Accept Challenge Invitation
Method: POST
Endpoint: /api/challenges/{challenge_id}/accept
Description: Accept the invitation to join a challenge.
Request Body: Not required.
Response: Returns a success message indicating that the invitation was accepted.

Start Challenge
Method: PUT
Endpoint: /api/challenges/{challenge_id}/start
Description: Start the challenge after all participants have accepted the invitation.
Request Body: Not required.
Response: Returns a success message indicating that the challenge has been started.

Update Challenge Daily Status
Method: PUT
Endpoint: /api/challenges/{challenge_id}/participants/{participant_id}/status
Description: Update the daily completion status of a challenge for a participant.
Request Body:
{
  "status_date": "2023-07-04",
  "is_completed": true
}
Response: Returns a success message indicating that the daily status has been updated.

Send Challenge Message
Method: POST
Endpoint: /api/challenges/{challenge_id}/participants/{participant_id}/messages
Description: Send a message or warning to another participant in the challenge.
Request Body:
{
  "recipient_id": 3,
  "message_content": "Remember to complete the challenge today!"
}
Response: Returns a success message indicating that the message was sent.

Get Unread Challenge Messages
Method: GET
Endpoint: /api/challenges/{challenge_id}/participants/{participant_id}/unread-messages
Description: Retrieve the unread messages received by a participant in the challenge.
Request Body: Not required.
Response: Returns a list of unread message objects for the participant.

Mark Message as Read
Method: PUT
Endpoint: /api/challenges/{challenge_id}/participants/{participant_id}/messages/{message_id}/mark-as-read
Description: Mark a specific message as read by the recipient user.
Request Body: Not required.
Response: Returns a success message indicating that the message has been marked as read.

With these updated endpoints, you can integrate Firebase Cloud Messaging to send push notifications to the recipient user when a new message is received. 
Upon receiving the notification, the user can access the unread messages by retrieving them using the "Get Unread Challenge Messages" endpoint. 
Once the user has read a message, you can use the "Mark Message as Read" endpoint to update the message status and avoid duplicate notifications.
